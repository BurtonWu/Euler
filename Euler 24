package euler;

import java.util.Arrays;

public class Euler24 {
	
	private int count = 0;
	private long[] lexograph; 
	public void run()
	{
		int[] nums = {0,1,2,3,4,5,6,7,8,9};
		lexograph = new long[3628800];
		lexo(0,nums);
		Arrays.sort(lexograph);
		System.out.println(lexograph[999999]);
	}
	public void lexo(int tier, int[] nums)
	{
		int perm = tier;
		for(int i = tier; i < nums.length; i++)
		{
			int[] tempOriginal = new int[nums.length];
			arrayCopy(tempOriginal, nums);
			int temp = tempOriginal[perm];
			tempOriginal[perm] = tempOriginal[i];
			tempOriginal[i] = temp;
			lexo(perm+1, tempOriginal);
			if(perm == tempOriginal.length-1)
			{
				lexograph[count] = arrayToInt(tempOriginal);
				count++;
			}
		}
	}
	public long arrayToInt(int[] a)
	{
		String x = "";
		String t = "";
		for(int i = 0; i < a.length; i++)
		{
			t = String.valueOf(a[i]);
			x += t;
			t = "";
		}
		return Long.parseLong(x);
	}
	public void arrayCopy(int[] a, int[] b)
	{
		for(int i = 0; i < a.length; i++)
		{
			a[i] = b[i];
		}
	}
}
