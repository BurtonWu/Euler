 package euler;

import java.util.HashSet;
import java.util.Iterator;

public class Euler32
{
	public void run()
	{
		boolean unique;
		String num;
		HashSet<Character> charSet = new HashSet<Character>();
		HashSet<String> dup = new HashSet<String>();
		for(int multiplicand = 1; multiplicand <= 99; multiplicand++)
		{
			int product, totalInt;
			for(int multiplier = 1; multiplier <= 9999; multiplier++)
			{
				product = multiplicand*multiplier;
				totalInt = (int) (Math.floor(Math.log10(product))+1 + Math.floor(Math.log10(multiplicand))+1
						+ Math.floor(Math.log10(multiplier))+1);
				if(totalInt == 9)
				{
					unique = true;
					num = String.valueOf(multiplier) + String.valueOf(multiplicand) + String.valueOf(product);
					charSet.clear();
					for(int i = 0; i < 9; i++)
					{
						if(!charSet.add(num.charAt(i)) || num.charAt(i) == '0')
						{
							unique = false;
							break;
						}
					}
					if(unique)
					{
						dup.add(String.valueOf(product));
					}
				}
			}
		}
		int answer = 0;
		Iterator<String> it = dup.iterator();
		while(it.hasNext())
		{
			answer += Integer.parseInt(it.next());
		}
		System.out.println(answer);
	}
}
